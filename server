// Manage Cart: Add, Update Quantity, and Remove Item
app.post('/cart-action', (req, res) => {
    const { action, product_id, quantity, cart_item_id } = req.body;
    const user_id = req.session.user?.id;

    if (!user_id) {
        return res.status(401).json({ error: 'User not logged in' });
    }

    if (action === 'add') {
        // Add item to cart or update quantity if it already exists
        db.query('SELECT * FROM cart WHERE user_id = ? AND product_id = ?', [user_id, product_id], (err, results) => {
            if (err) return res.status(500).json({ error: 'Database error' });

            if (results.length > 0) {
                // Product already in cart, update quantity
                const cartItemId = results[0].id;
                db.query('UPDATE cart SET quantity = quantity + 1 WHERE id = ?', [cartItemId], (err) => {
                    if (err) return res.status(500).json({ error: 'Failed to update cart' });
                    fetchUpdatedCart(user_id, res);
                });
            } else {
                // Product not in cart, add it
                db.query('INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, ?)', [user_id, product_id, 1], (err) => {
                    if (err) return res.status(500).json({ error: 'Failed to add product to cart' });
                    fetchUpdatedCart(user_id, res);
                });
            }
        });
    } else if (action === 'update') {
        // Update the quantity of an item in the cart
        db.query('UPDATE cart SET quantity = ? WHERE id = ? AND user_id = ?', [quantity, cart_item_id, user_id], (err) => {
            if (err) return res.status(500).json({ error: 'Error updating cart' });
            fetchUpdatedCart(user_id, res);
        });
    } else if (action === 'remove') {
        // Remove an item from the cart
        db.query('DELETE FROM cart WHERE id = ? AND user_id = ?', [cart_item_id, user_id], (err) => {
            if (err) return res.status(500).json({ error: 'Error removing item from cart' });
            fetchUpdatedCart(user_id, res);
        });
    } else {
        res.status(400).json({ error: 'Invalid action' });
    }
});

// Helper function to fetch updated cart and send response
function fetchUpdatedCart(user_id, res) {
    const sql = `
        SELECT cart.id, products.name, products.price, cart.quantity, products.image_url
        FROM cart
        JOIN products ON cart.product_id = products.id
        WHERE cart.user_id = ?
    `;
    db.query(sql, [user_id], (err, results) => {
        if (err) {
            return res.status(500).json({ error: 'Error fetching updated cart' });
        }
        res.json({ cart: results });
    });
}
