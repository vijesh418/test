const express = require('express');
const mysql = require('mysql');
const app = express();
const port = 3000;

// Set up the database connection
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'mydb'
});

db.connect(err => {
  if (err) throw err;
  console.log('Connected to the database');
});

app.use(express.json());  // Middleware to parse JSON requests

// Add product to cart or update quantity
app.post('/add-to-cart', (req, res) => {
  const { product_id } = req.body;

  // Get the logged-in user's id from session or JWT (this is a placeholder)
  const user_id = req.session.user_id; // Replace with actual user authentication method

  if (!user_id) {
    return res.status(401).json({ error: 'User not logged in' });
  }

  // Check if the product is already in the cart
  db.query('SELECT * FROM cart WHERE user_id = ? AND product_id = ?', [user_id, product_id], (err, results) => {
    if (err) return res.status(500).json({ error: 'Database error' });

    if (results.length > 0) {
      // Product already in cart, update quantity
      const cartItemId = results[0].id;
      db.query('UPDATE cart SET quantity = quantity + 1 WHERE id = ?', [cartItemId], (err) => {
        if (err) return res.status(500).json({ error: 'Failed to update cart' });
        res.status(200).json({ message: 'Product quantity updated in cart' });
      });
    } else {
      // Product not in cart, add it
      db.query('INSERT INTO cart (user_id, product_id, quantity) VALUES (?, ?, ?)', [user_id, product_id, 1], (err) => {
        if (err) return res.status(500).json({ error: 'Failed to add product to cart' });
        res.status(200).json({ message: 'Product added to cart' });
      });
    }
  });
});

app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});
