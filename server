const express = require("express");
const mysql = require("mysql2");
const path = require("path");
const session = require("express-session");

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true })); // To parse form data

// Serve static files from the current directory
app.use(express.static(path.join(__dirname))); // Serves files from the root project folder

// MySQL Connection
const db = mysql.createConnection({
    host: "localhost",
    user: "root", // Replace with your MySQL username
    password: "sony123", // Replace with your MySQL password
    database: "mydb",
});

db.connect(err => {
    if (err) {
        console.error("Error connecting to MySQL:", err.message);
        return;
    }
    console.log("Connected to MySQL database");
});

// Configure sessions
app.use(
    session({
        secret: "yourSecretKey",
        resave: false,
        saveUninitialized: true,
    })
);

// Serve the signup.html file
app.get("/signup", (req, res) => {
    res.sendFile(path.join(__dirname, "signup.html")); // Ensure signup.html is in the same directory as server.js
});

// Signup Endpoint
app.post("/signup", (req, res) => {
    const { email, first_name, last_name, phone, dob, password, confirm_password } = req.body;

    // Check if passwords match
    if (password !== confirm_password) {
        return res.status(400).json({ error: "Passwords do not match" });
    }

    // Insert into database
    const sql = "INSERT INTO users (email, first_name, last_name, phone, dob, password) VALUES (?, ?, ?, ?, ?, ?)";
    db.query(
        sql,
        [email, first_name, last_name, phone, dob, password],
        (err, result) => {
            if (err) {
                console.error(err);
                return res.status(500).json({ error: "Error signing up" });
            }
            res.status(201).json({ message: "Signup successful", userId: result.insertId });
        }
    );
});

// Serve the login.html file
app.get("/login", (req, res) => {
    res.sendFile(path.join(__dirname, "login.html")); // Ensure login.html is in the same directory as server.js
});

// Login Endpoint
app.post("/login", (req, res) => {
    const { username, password } = req.body;

    // Query database for user credentials
    const sql = "SELECT * FROM users WHERE email = ? AND password = ?";
    db.query(sql, [username, password], (err, results) => {
        if (err) {
            console.error("Error during login:", err);
            return res.status(500).json({ error: "An error occurred. Please try again." });
        }

        if (results.length > 0) {
            // Save user details in session
            req.session.user = results[0];
            return res.redirect("/index.html");
        } else {
            res.redirect("/login?error=Invalid username or password");
        }
    });
});

// Logout Endpoint
app.post("/logout", (req, res) => {
    req.session.destroy(err => {
        if (err) {
            console.error("Error during logout:", err);
            return res.status(500).json({ error: "Logout failed. Please try again." });
        }
        res.redirect("/index.html");
    });
});

// Serve the index.html file
app.get("/index.html", (req, res) => {
    res.sendFile(path.join(__dirname, "index.html")); // Ensure index.html is in the same directory as server.js
});

// Session Status Endpoint
app.get("/session-status", (req, res) => {
    if (req.session.user) {
        res.json({ loggedIn: true, user: req.session.user });
    } else {
        res.json({ loggedIn: false });
    }
});

// Start the server
app.listen(3000, () => {
    console.log("Server running at http://localhost:3000");
});
