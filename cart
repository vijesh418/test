<td>
    <div class="quantity-container">
        <button class="quantity-decrease" data-id="${item.id}">-</button>
        <span class="quantity-display">${item.quantity}</span>
        <button class="quantity-increase" data-id="${item.id}">+</button>
    </div>
</td>

<script>
$(document).ready(function () {
    function fetchCart() {
        $.get('/cart', function (cart) {
            updateCart(cart);
        });
    }

    function updateCart(cart) {
        let total = 0;
        $('#cart-items').empty();

        cart.forEach(item => {
            const totalPrice = item.price * item.quantity;
            total += totalPrice;

            const cartRow = `
                <tr data-id="${item.id}">
                    <td>
                        <img src="${item.image_url}" alt="Product Image">
                        <span class="cart-item-name">${item.name}</span>
                    </td>
                    <td>$${item.price}</td>
                    <td>
                        <div class="quantity-container">
                            <button class="quantity-decrease" data-id="${item.id}">-</button>
                            <span class="quantity-display">${item.quantity}</span>
                            <button class="quantity-increase" data-id="${item.id}">+</button>
                        </div>
                    </td>
                    <td>$${totalPrice.toFixed(2)}</td>
                    <td><button class="remove-item" data-id="${item.id}">Remove</button></td>
                </tr>
            `;
            $('#cart-items').append(cartRow);
        });

        $('#total-price').text(`$${total.toFixed(2)}`);
    }

    // Update quantity
    $('#cart-items').on('click', '.quantity-increase, .quantity-decrease', function () {
        const button = $(this);
        const cart_item_id = button.data('id');
        const isIncrease = button.hasClass('quantity-increase');
        const quantityDisplay = button.siblings('.quantity-display');
        let currentQuantity = parseInt(quantityDisplay.text());

        currentQuantity = isIncrease ? currentQuantity + 1 : currentQuantity - 1;

        if (currentQuantity < 1) {
            alert('Quantity cannot be less than 1');
            return;
        }

        quantityDisplay.text(currentQuantity);

        $.post('/cart-action', { action: 'update', cart_item_id, quantity: currentQuantity }, function (response) {
            updateCart(response.cart);
        }).fail(function () {
            alert('Error updating quantity.');
        });
    });

    // Remove item
    $('#cart-items').on('click', '.remove-item', function () {
        const cart_item_id = $(this).data('id');

        $.post('/remove-from-cart', { cart_item_id }, function (response) {
            if (response.error) {
                alert('Failed to remove item from cart.');
            } else {
                fetchCart();
            }
        }).fail(function () {
            alert('Error removing item.');
        });
    });

    // Initial fetch
    fetchCart();
});
</script>

